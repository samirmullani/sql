1. List all customers who live in Pune.
SELECT * FROM customers WHERE city = 'Pune';

2. Show all products where price > 5000.
SELECT * FROM products WHERE price > 5000;

3. Find total number of customers from each city.
SELECT city, COUNT(*) AS total_customers
FROM customers
GROUP BY city;

4. Display all orders with their customer name.
SELECT o.order_id, o.order_date, o.status, c.name AS customer_name
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id;

5. List products whose stock is less than 50.
SELECT * FROM products WHERE stock < 50;

6. Find the total spending of customer "Aarav Sharma".
SELECT c.name, SUM(o.total_amount) AS total_spending
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
WHERE c.name = 'Aarav Sharma'
GROUP BY c.name;

7. Show the top 2 most expensive products.
SELECT * FROM products
ORDER BY price DESC
LIMIT 2;

8. Display all orders which are PAID along with payment method.
SELECT o.order_id, c.name, p.method, p.amount
FROM orders o
JOIN payments p ON o.order_id = p.order_id
JOIN customers c ON o.customer_id = c.customer_id
WHERE o.status = 'PAID';

9. Find customers who have never placed an order.
SELECT c.customer_id, c.name
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
WHERE o.order_id IS NULL;

10. Show all order items where quantity >= 3.
SELECT * FROM order_items WHERE quantity >= 3;

11. Calculate the average price of all products in category "Electronics".
SELECT category, AVG(price) AS avg_price
FROM products
WHERE category = 'Electronics';

12. Find the highest order amount among all orders.
SELECT MAX(total_amount) AS highest_order
FROM orders;

13. Show names of customers who placed orders between '2025-09-01' and '2025-09-05'.
SELECT DISTINCT c.name
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
WHERE o.order_date BETWEEN '2025-09-01' AND '2025-09-05';

14. Display each order with the number of items it contains.
SELECT o.order_id, COUNT(oi.order_item_id) AS item_count
FROM orders o
JOIN order_items oi ON o.order_id = oi.order_id
GROUP BY o.order_id;

15. Show the most frequently ordered product.
SELECT p.name, SUM(oi.quantity) AS total_ordered
FROM order_items oi
JOIN products p ON oi.product_id = p.product_id
GROUP BY p.name
ORDER BY total_ordered DESC
LIMIT 1;

16. List all customers who have more than 1 order.
SELECT c.name, COUNT(o.order_id) AS order_count
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_id
HAVING COUNT(o.order_id) > 1;

17. Find the total sales per city.
SELECT c.city, SUM(o.total_amount) AS total_sales
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
GROUP BY c.city;

18. Show orders along with their products (order_id, product_name, quantity).
SELECT o.order_id, p.name AS product_name, oi.quantity
FROM order_items oi
JOIN orders o ON oi.order_id = o.order_id
JOIN products p ON oi.product_id = p.product_id;

19. Display customers and their lifetime spending (sum of all orders).
SELECT c.name, SUM(o.total_amount) AS lifetime_spending
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.name;

20. Find top 2 customers by their lifetime spending with order count.
SELECT c.name, SUM(o.total_amount) AS total_spending, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.name
ORDER BY total_spending DESC
LIMIT 2;
